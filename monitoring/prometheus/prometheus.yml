# Prometheus Configuration for YuToDo Observability

global:
  scrape_interval: 15s          # Global scrape interval
  evaluation_interval: 15s      # Rule evaluation interval
  external_labels:
    cluster: 'yutodo-local'
    environment: 'development'

# Rule files
rule_files:
  - "rules/*.yml"

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics

  # YuToDo Application Metrics
  - job_name: 'yutodo-server'
    static_configs:
      - targets: ['yutodo-server:9090']
    scrape_interval: 10s
    metrics_path: /metrics
    honor_labels: true
    params:
      format: ['prometheus']
    scrape_timeout: 10s
    
    # Add custom labels
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: yutodo-server:9090
    
    # Metric relabeling
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'yutodo_.*'
        target_label: service
        replacement: 'yutodo-server'

  # YuToDo Health Checks
  - job_name: 'yutodo-health'
    static_configs:
      - targets: ['yutodo-server:8080']
    scrape_interval: 30s
    metrics_path: /health
    params:
      format: ['prometheus']

  # Node Exporter - System Metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    
    # Add meaningful labels
    relabel_configs:
      - target_label: job
        replacement: 'system-metrics'

  # cAdvisor - Container Metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    
    # Filter out irrelevant container metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'container_.*'
        target_label: source
        replacement: 'container'
      
      # Drop unwanted metrics to reduce storage
      - source_labels: [__name__]
        regex: 'container_(network_tcp_usage_total|tasks_state|cpu_usage_seconds_total)'
        action: drop

  # AlertManager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Loki
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s
    metrics_path: /metrics

# Remote write (optional - for external Prometheus)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     headers:
#       Authorization: "Bearer <token>"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB