name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    name: E2E Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # Linux specific dependencies
      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            xvfb

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: npm ci

      # Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd server
          npm ci

      # Install Playwright browsers
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      # Build frontend
      - name: Build frontend
        run: npm run build

      # Start backend server
      - name: Start backend server
        run: |
          cd server
          npm run dev &
          sleep 5
        shell: bash

      # Run E2E tests on Linux with virtual display
      - name: Run E2E tests (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          npm run test:e2e
        env:
          CI: true

      # Run E2E tests on Windows/macOS
      - name: Run E2E tests (Windows/macOS)
        if: matrix.os != 'ubuntu-latest'
        run: npm run test:e2e
        env:
          CI: true

      # Upload test results
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results-${{ matrix.os }}
          path: |
            playwright-report/
            e2e/screenshots/
            test-results/
          retention-days: 7

      # Upload test videos on failure
      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-videos-${{ matrix.os }}
          path: test-results/**/video.webm
          retention-days: 7

  e2e-report:
    name: E2E Test Report
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate summary
        run: |
          echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for os in ubuntu-latest windows-latest macos-latest; do
            echo "### $os" >> $GITHUB_STEP_SUMMARY
            if [ -d "artifacts/playwright-results-$os" ]; then
              echo "✅ Tests completed" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Tests failed or not run" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          done
          
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Test reports and screenshots are available in the artifacts section" >> $GITHUB_STEP_SUMMARY